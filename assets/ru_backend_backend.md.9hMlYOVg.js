import{_ as a,o as e,c as s,a4 as t}from"./chunks/framework.B8KxSsRZ.js";const b=JSON.parse('{"title":"Варианты задействовать свой бэкенд для фронтендера","description":"","frontmatter":{},"headers":[],"relativePath":"ru/backend/backend.md","filePath":"ru/backend/backend.md","lastUpdated":1729563666000}'),o={name:"ru/backend/backend.md"},p=t('<h1 id="варианты-задеиствовать-свои-бэкенд-для-фронтендера" tabindex="-1">Варианты задействовать свой бэкенд для фронтендера <a class="header-anchor" href="#варианты-задеиствовать-свои-бэкенд-для-фронтендера" aria-label="Permalink to &quot;Варианты задействовать свой бэкенд для фронтендера&quot;">​</a></h1><details class="details custom-block"><summary>Как протестировать фронт на данных с бэка?</summary><p>Есть много сервисов, предлагающих свой API с различными данными для тестирования либо полноценной работы</p><p>Например, <a href="https://jsonplaceholder.typicode.com/" target="_blank" rel="noreferrer">jsonplaceholder.typicode.com</a></p><p>Гуглить по <code>&quot;json placeholder&quot;</code></p></details><details class="details custom-block"><summary>Есть ли бесплатные открытые API с реальными данными?</summary><p>Полно. Например, <a href="https://github.com/public-apis/public-apis" target="_blank" rel="noreferrer">тут</a></p><p>Гуглить по <code>&quot;public api&quot;</code></p><p>Также можно похакать релевантные сайты в DevTools / Network на предмет эндпойнтов с данными в подходящем формате</p></details><details class="details custom-block"><summary>Как сделать свой бэкенд?</summary><p>Если уже знаете JavaScript, поставить и запустить Node.js с HTTP сервером проблем вызвать не должно.</p><p>Node.js далеко не очень популярный сервер для интернета, но для небольшого проекта пойдет.</p><p>В абсолютном значении проще всего установить и начать работать с Nginx и PHP</p><p>Большинство крупных облачных провайдеров (Amazon, Google, Oracle, Microsoft) предоставляет бесплатные планы с возможностью запустить виртуальный сервер. Поставив туда что требуется, можно захостить и бэк, и бандл фронта.</p></details><details class="details custom-block"><summary>Что такое BaaS (Backend as a service)?</summary><p>Это облачное решение, когда бэкенд в виде базы данных и интерфейса доступа к ней, а возможно и возможность использовать некоторую логику, предоставляет BaaS провайдер.</p><p>Например, NoSQL базу данных и доступ к ней предоставляет Google с помощью своего сервиcа Firebase</p><p>Альтернатива с PostgreSQL - Supabase</p><p>То есть, ваш фронтэнд будет обращаться к их определенным эндпойнтам и получать нужные сервисы - например, сохранять и запрашивать данные в базе данных.</p><p>Оба сервиса предоставляют возможность сделать аутентификацию на сайте. Таким образом, фронтэндер может написать приложение используя подобный сервис без написания своего бэкенд кода и без размещения его где-то на сервере в интернете.</p><p>У данных сервисов есть бесплатные планы с довольно большими ресурсами.</p></details><details class="details custom-block"><summary>Бизнес логика на BaaS</summary><p>Большинство BaaS сервисов предоставляет не только CRUD доступ к своей базе данных, но и возможность написать кастомную логику в виде Cloud Functions у Firebase, Edge Functions у Supabase, AWS Lambda у Amazon и т.д.</p><p>Данные функции являются кодом на каком-то языке программирования, который будет вызываться при обращении к определенному эндпойнту бэкенда.</p><p>В случае, если фронтенд разработчик хочет сделать полноценное приложение, но заморачиваться на самостоятельный бэкенд не хочет, это является довольно неплохим и очень экономичным решением.</p></details><details class="details custom-block"><summary>Как работают Edge/Cloud/Lamda функции</summary><p>По сути, это бэкенд в миниатюре</p><p>Твой фронт обращаешься к заданному эндпойнту (через API gateway сервиса BaaS провайдера) - например, <code>/api/somefunc</code></p><p>Там лежит написанный тобой скрипт на js или другом языке программирования который выполняется, имеет доступ к базе данных и может делать другие вещи (грузить данные из инета например)</p><p>Затем скрипт формирует результат и возвращает его твоему фронту</p></details>',7),c=[p];function r(d,l,i,m,n,u){return e(),s("div",null,c)}const k=a(o,[["render",r]]);export{b as __pageData,k as default};
