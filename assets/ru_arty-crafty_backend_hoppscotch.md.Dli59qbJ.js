import{_ as a,c as i,o as t,ah as e}from"./chunks/framework.CH-e-O8w.js";const n="/assets/hoppscotch.C1usRc-g.webp",F=JSON.parse('{"title":"Hoppscotch","description":"","frontmatter":{"pageClass":"arty-crafty","head":[["meta",{"name":"og:site_name","content":"Arty-Crafty - проект онлайн магазина"}],["meta",{"name":"og:image","content":"/images/arty-crafty-logo.png"}],["meta",{"name":"twitter:image","content":"/images/arty-crafty-logo.png"}]]},"headers":[],"relativePath":"ru/arty-crafty/backend/hoppscotch.md","filePath":"ru/arty-crafty/backend/hoppscotch.md","lastUpdated":1738480984000}'),p={name:"ru/arty-crafty/backend/hoppscotch.md"};function h(l,s,r,k,c,o){return t(),i("div",null,s[0]||(s[0]=[e('<h1 id="hoppscotch" tabindex="-1">Hoppscotch <a class="header-anchor" href="#hoppscotch" aria-label="Permalink to &quot;Hoppscotch&quot;">​</a></h1><h2 id="работа-с-api" tabindex="-1">Работа с API <a class="header-anchor" href="#работа-с-api" aria-label="Permalink to &quot;Работа с API&quot;">​</a></h2><p>Для работы и тестирования API обычно используется инструмент типа <code>Postman</code>, умеющий делать REST запросы и всё остальное, с ним связанное. Однако, как это часто бывает с монополистом, <code>Postman</code> сильно отяжелел за последние годы и работать с ним не очень комфортно.</p><p>Одной из удобных альтернатив является <code>Hopscotch</code>, в девичестве - <code>Postwoman</code>. Он работает из браузера или как PWA приложение, имеет весь необходимый нам функционал и написан на Vue.</p><p><img src="'+n+`" alt="image"></p><h2 id="endpoints" tabindex="-1">Endpoints <a class="header-anchor" href="#endpoints" aria-label="Permalink to &quot;Endpoints&quot;">​</a></h2><p>Нам нужны три эндпойнта на текущем этапе:</p><ul><li>список всех категорий</li><li>список товаров в определенной категории</li><li>подробная информация о товаре</li></ul><p>Создадим соответствующие запросы в Hoppscotch:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GET</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://client_id.supabase.co/rest/v1/categories?select=*&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Authorization: Bearer $apiKey$&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;apikey: $apiKey$&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GET</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://client_id.supabase.co/rest/v1/categories?select=id,title,product(id,title,desc)&amp;id=eq.2&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Authorization: Bearer $apiKey$&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;apikey: $apiKey$&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GET</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://client_id.supabase.co/rest/v1/products?select=id,title,desc,data&amp;id=eq.2&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Authorization: Bearer $apiKey$&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;apikey: $apiKey$&#39;</span></span></code></pre></div><p>Второй запрос - это <code>LEFT JOIN</code> на таблицах <code>categories</code> и <code>products</code>. К сожалению документация Supabase не очень детально описывает join-ы, пришлось поэкспериментировать.</p>`,11)]))}const C=a(p,[["render",h]]);export{F as __pageData,C as default};
